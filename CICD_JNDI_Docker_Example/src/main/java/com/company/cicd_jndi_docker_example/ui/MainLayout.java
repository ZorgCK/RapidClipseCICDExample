
package com.company.cicd_jndi_docker_example.ui;

import com.company.cicd_jndi_docker_example.dal.CustomerDAO;
import com.company.cicd_jndi_docker_example.domain.Customer;
import com.rapidclipse.framework.server.data.format.DateFormatBuilder;
import com.rapidclipse.framework.server.data.renderer.DateRenderer;
import com.rapidclipse.framework.server.resources.CaptionUtils;
import com.vaadin.flow.component.grid.Grid;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.data.provider.DataProvider;
import com.vaadin.flow.router.Route;
import com.vaadin.flow.server.InitialPageSettings;
import com.vaadin.flow.server.PageConfigurator;


@Route("")
public class MainLayout extends VerticalLayout implements PageConfigurator
{
	public MainLayout()
	{
		super();
		this.initUI();
	}
	
	@Override
	public void configurePage(final InitialPageSettings settings)
	{
		settings.addLink("shortcut icon", "frontend/images/favicon.ico");
		settings.addFavIcon("icon", "frontend/images/favicon256.png", "256x256");
	}
	
	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.grid = new Grid<>(Customer.class, false);

		this.grid.addColumn(Customer::getCustomerId).setKey("customerId")
			.setHeader(CaptionUtils.resolveCaption(Customer.class, "customerId")).setSortable(true).setAutoWidth(true)
			.setFlexGrow(0);
		this.grid.addColumn(Customer::getLastName).setKey("lastName")
			.setHeader(CaptionUtils.resolveCaption(Customer.class, "lastName")).setSortable(true);
		this.grid.addColumn(Customer::getFirstName).setKey("firstName")
			.setHeader(CaptionUtils.resolveCaption(Customer.class, "firstName")).setSortable(true);
		this.grid.addColumn(Customer::getEmail).setKey("email")
			.setHeader(CaptionUtils.resolveCaption(Customer.class, "email")).setSortable(true);
		this.grid.addColumn(new DateRenderer<>(Customer::getCreateDate, DateFormatBuilder.DateTime().build(), ""))
			.setKey("createDate").setHeader(CaptionUtils.resolveCaption(Customer.class, "createDate"))
			.setSortable(true);
		this.grid.addColumn(Customer::isActive).setKey("active")
			.setHeader(CaptionUtils.resolveCaption(Customer.class, "active")).setSortable(true).setFlexGrow(0);
		this.grid.setDataProvider(DataProvider.ofCollection(CustomerDAO.INSTANCE.findAll()));
		this.grid.setSelectionMode(Grid.SelectionMode.SINGLE);

		this.grid.setSizeFull();
		this.add(this.grid);
		this.setFlexGrow(1.0, this.grid);
		this.setSizeFull();
	} // </generated-code>

	// <generated-code name="variables">
	private Grid<Customer> grid;
	// </generated-code>
	
}
